name: Continuous Integration
on:
  push:
    branches:
    - master
  pull_request:

env:
  PROJ_VERSION: 7.1.0

jobs:
  rustfmt:
    name: Formatting check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Install Rust stable
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          profile: minimal
          components: rustfmt
    - name: Run cargo fmt
      run: make format

  clippy:
    name: Analyzing code with Clippy
    runs-on: ubuntu-latest
    steps:
    - name: Install proj
      run: |
        wget --quiet --output-document - "https://kisiodigital.jfrog.io/kisiodigital/api/gpg/key/public" | sudo apt-key add -
        echo "deb [arch=amd64] https://kisiodigital.jfrog.io/kisiodigital/debian-local stretch main" | sudo tee /etc/apt/sources.list.d/kisio-digital.list
        sudo apt update
        sudo apt install --yes pkg-config libssl-dev clang libtiff-dev libcurl4-nss-dev proj=${PROJ_VERSION}
    - uses: actions/checkout@master
    - name: Install Rust stable
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          profile: minimal
          components: clippy
    - name: Run cargo clippy
      run: make lint

  tests:
    name: Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [stable, beta]
        include:
          - build: stable
            os: ubuntu-latest
            rust: stable
          - build: beta
            os: ubuntu-latest
            rust: beta
    steps:
    - name: Install proj
      run: |
        wget --quiet --output-document - "https://kisiodigital.jfrog.io/kisiodigital/api/gpg/key/public" | sudo apt-key add -
        echo "deb [arch=amd64] https://kisiodigital.jfrog.io/kisiodigital/debian-local stretch main" | sudo tee /etc/apt/sources.list.d/kisio-digital.list
        sudo apt update
        sudo apt install --yes libxml2-utils pkg-config libssl-dev clang libtiff-dev libcurl4-nss-dev proj=${PROJ_VERSION}
    - uses: actions/checkout@master
    - name: Install Rust ${{ matrix.rust }}
      uses: actions-rs/toolchain@v1
      with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
    - name: Run tests with all features
      run: make test

  release:
    name: Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        bin:
        - "apply-rules"
        - "enrich-with-hellogo-fares"
        - "extract-osm-pois"
        - "filter-ntfs"
        - "improve-stop-positions"
        - "kv12ntfs"
        - "map-ntfs-with-osm"
        - "merge-ntfs"
        - "merge-pois"
        - "merge-stop-areas"
        - "netexidf2ntfs"
        - "read-shapes-from-osm"
        - "sytral2navitia-pois"
        - "transfers"
        - "transxchange2ntfs"
    steps:
    - name: Install proj
      run: |
        wget --quiet --output-document - "https://kisiodigital.jfrog.io/kisiodigital/api/gpg/key/public" | sudo apt-key add -
        echo "deb [arch=amd64] https://kisiodigital.jfrog.io/kisiodigital/debian-local stretch main" | sudo tee /etc/apt/sources.list.d/kisio-digital.list
        sudo apt update
        sudo apt install --yes libssl-dev clang libtiff-dev libcurl4-nss-dev proj=${PROJ_VERSION}
    - uses: actions/checkout@master
    - name: Install Rust stable
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          profile: minimal
          override: true
    - name: Build binaries
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --workspace --all-features --bin ${{ matrix.bin }}
    - name: Publish ${{ matrix.bin }} binary
      uses: actions/upload-artifact@v1
      continue-on-error: true
      with:
        name: ${{ matrix.bin }}
        path: target/release/${{ matrix.bin }}
